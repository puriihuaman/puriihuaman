---
import { Projects } from "@components/Projects";
import Layout from "@layouts/Layout.astro";

import { SKILLS_LIST } from "@data/skills-list";
import type { ISkill } from "@interfaces/ISkill";
let technology = "Astro";
---

<style>
	.project {
		padding-top: var(--space-8);

		@media (width >= 1024px) {
			min-height: 100vh;
			display: flex;
			justify-content: center;
			flex-direction: column;
			padding: 0;
		}
	}

	.header {
		border-bottom: 1px solid var(--gray-800);
		padding-bottom: var(--space-2);
	}

	.title {
		font-family: var(--heading-font);
		font-size: var(--fontSizes-2xl);

		@media (width >= 768px) {
			font-size: var(--fontSizes-3xl);
		}
		@media (width >= 1024px) {
			font-size: var(--fontSizes-4xl);
		}
	}

	.projects {
		display: flex;
		flex-direction: column;
		row-gap: var(--space-8);
		padding-top: var(--space-8);
		width: var(--sizes-full);
	}

	/* ----------------------------------------- */
	.dropdown {
		position: relative;
		border-radius: var(--radii-lg);
		border: 1px solid var(--gray-800);
		box-shadow: var(--shadow-xl);
	}

	.dropdown-button {
		display: flex;
		justify-content: space-between;
		align-items: center;
		column-gap: var(--space-4);
		padding: var(--space-3) var(--space-4);
		width: var(--sizes-full);
		cursor: pointer;
		text-transform: capitalize;
	}

	.dropdown-text,
	.dropdown-icon {
		/* cursor: none; */
		user-select: none;
	}

	.dropdown-option {
		--height-size: 0;
		--opacity: 0;
		--visible: hidden;
		position: absolute;
		inset: 0px auto auto 0px;
		z-index: var(--zIndices-dropdown);
		font-size: var(--fontSizes-sm);
		text-align: left;
		height: var(--height-size);
		color: var(--gray-50);
		background-color: var(--gray-950);
		width: var(--sizes-full);
		border: 1px solid var(--gray-800);
		border-radius: var(--radii-lg);
		opacity: var(--opacity);
		visibility: var(--visible);
		transform-origin: center;
		transform: translateY(var(--sizes-14));
		transition: var(--transition-property-common),
			var(--transition-easing-ease-in-out), var(--transition-duration-300);

		&.dropdown-open {
			--height-size: 140px;
			--opacity: 1;
			--visible: visible;
			overflow-y: auto;
		}
	}

	.dropdown-item {
		padding: var(--space-3) var(--space-4);
		cursor: pointer;
		&:hover {
			background-color: var(--gray-900);
		}
	}

	/* ---- */
	details .content {
		opacity: 0;
		max-height: 0;
		overflow: hidden;
		transition:
			opacity 0.4s ease,
			max-height 0.4s ease;
	}

	details[open] .content {
		visibility: visible;
		opacity: 1;
		max-height: 100px; /* Ajusta según la altura del contenido */
	}

	.tall {
		position: absolute;
		inset: 0px auto auto 0px;
		z-index: 200;
		max-height: 120px;
		height: 120px;
		background-color: red;
	}
	.small {
		transition-delay: 10ms !important;
		max-height: 0px;
		height: 0;
	}
</style>

<Layout title="Proyectos - Puriihuaman">
	<main class="project">
		<div class="header">
			<h2 class="title">Proyectos</h2>
		</div>

		<div class="projects">
			<!-- <details id="dropdown-button" class="dropdown dropdown-button">
				<summary>
					<span class="dropdown-text">Technology</span>
					<span class="dropdown-icon"> ➕ </span>
				</summary>

				<ul class="content dropdown-option" id="dropdown-option">
					<li class="dropdown-item" data-tech="todos">Todos</li>

					{
						SKILLS_LIST.map((skill: ISkill) => (
							<li class="dropdown-item" data-skill={skill.tech}>
								{skill.tech}
							</li>
						))
					}
				</ul>
			</details> -->

			<Projects client:load />
		</div>
	</main>
</Layout>

<!-- <script>
	import { SKILLS_LIST } from "@data/skills-list";

	window.addEventListener("load", () => {
		const details = document.getElementById("dropdown-button");
		const options = document.querySelector("#dropdown-option");
		const items = Array.from(options?.querySelectorAll(".dropdown-item") || []);

		if (details || options || items) {
			details?.addEventListener("toggle", (): void => {
				// options?.classList.toggle("dropdown-open");

				if (details?.open) {
					console.log(details?.open);
					options?.classList.add("tall");
					options?.classList.remove("small");
					console.log("Agrear");
				} else {
					console.log(details?.open);
					console.log("quitar");
					options?.classList.remove("tall");
					options?.classList.add("small");
				}
			});

			items.forEach((item) => {
				item.addEventListener("click", () => {
					// options?.classList.remove("dropdown-open");
				});
			});
		}

		options?.addEventListener("transitionend", () => {
			if (details?.open) {
				// options.classList.add("tall"); // Evita restricciones de altura una vez se ha abierto
			}
		});
	});
</script> -->
